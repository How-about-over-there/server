server:
  port: 19091

spring:
  data:
    redis:
      host: ${REDIS_URL}
      port: 6379
  application:
    name: gateway-service
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  # 서비스 디스커버리를 통해 동적으로 라우트를 생성하도록 설정
      routes:
        #Auth
        - id: auth-service-api
          uri: lb://auth-service
          predicates:
            - Path=/api/v1/auth/**
        #User
        - id: user-service-api  # 라우트 식별자 (API용)
          uri: lb://user-service # 'users-service'로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/api/v1/users/** # /api/v1/users/** 경로로 들어오는 요청 처리

        - id: user-service-admin  # 라우트 식별자 (Admin용)
          uri: lb://user-service # 동일한 'users-service'로 로드 밸런싱된 서비스로 라우팅
          predicates:
            - Path=/admin/v1/users/** # /admin/v1/users/** 경로로 들어오는 요청 처리
        #Coupon
        - id: coupon-service-events-api
          uri: lb://coupon-service
          predicates:
            - Path=/api/v1/events/**

        - id: coupon-service-events-admin
          uri: lb://coupon-service
          predicates:
            - Path=/admin/v1/events/**

        - id: coupon-service-coupons-api
          uri: lb://coupon-service
          predicates:
            - Path=/api/v1/coupons/**

        - id: coupon-service-coupons-admin
          uri: lb://coupon-service
          predicates:
            - Path=/admin/v1/coupons/**
        #Lodge
        - id: lodge-service-api
          uri: lb://lodge-service
          predicates:
            - Path=/api/v1/lodges/**

        - id: lodge-service-lodges-dates-api
          uri: lb://lodge-service
          predicates:
            - Path=/api/v1/lodge-dates/**
        #Reveiw
        - id: review-service-api
          uri: lb://review-service
          predicates:
            - Path=/api/v1/reviews/**

        - id: review-service-admin
          uri: lb://review-service
          predicates:
            - Path=/admin/v1/reviews/**

        #Reservation
        - id: reservation-service
          uri: lb://reservation-service
          predicates:
            - Path=/api/v1/reservations/**

        - id: reservation-service-admin
          uri: lb://reservation-service
          predicates:
            - Path=/admin/v1/reservations/**
        #Payments
        - id: payment-service-api
          uri: lb://payment-service
          predicates:
            - Path=/api/v1/payments/**
        # 결제 페이지 처리
        - id: payment-service-html
          uri: lb://payment-service
          predicates:
            - Path=/payment.html
        - id: payment-service-admin
          uri: lb://payment-service
          predicates:
            - Path=/admin/v1/payments/**
        #Point
        - id: point-service-api
          uri: lb://point-service
          predicates:
            - Path=/api/v1/points/**

        - id: point-service-admin
          uri: lb://point-service
          predicates:
            - Path=/admin/v1/points/**

eureka:
  client:
    service-url:
      defaultZone: http://${SERVER_DNS}/eureka/


jwt:
  secret:
    key: W3JwO3COO+XEYBKoVl3VNMfehUaEOnKWL48J+bqsOII8jSehu/sSO3GGrwyKxQyQHBNCUAJMmWldSA6Dyo7azA==

# 두가지 방식으로 필터링 받지 않을 URL 을 설정할 수 있습니다
# exact-paths: 완전히 일치하면 필터링 X
# prefix-paths: 입력 url 로 시작하면 필터링 X
filter:
  bypass:
    exact-paths: /api/v1/auth/login, /api/v1/auth/signup, /payment.html
    prefix-paths: /api/v1/auth


